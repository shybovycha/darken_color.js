// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");

function parse_hex(s) {
  return Caml_format.caml_int_of_string("0x" + s);
}

function hex2rgb(hex) {
  var matches = Belt_Option.map(Belt_Option.map(Belt_Option.map(Belt_Option.map(Caml_option.null_to_opt(new RegExp("^#?([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$").exec(hex)), (function (prim) {
                      return prim;
                    })), (function (param) {
                  return param.map(function (prim) {
                              if (prim == null) {
                                return ;
                              } else {
                                return Caml_option.some(prim);
                              }
                            });
                })), (function (x) {
              return x.slice(1);
            })), (function (param) {
          return param.map(function (x) {
                      return Belt_Option.map(x, parse_hex);
                    });
        }));
  if (matches === undefined) {
    return ;
  }
  if (matches.length !== 3) {
    return ;
  }
  var r = matches[0];
  if (r === undefined) {
    return ;
  }
  var g = matches[1];
  if (g === undefined) {
    return ;
  }
  var b = matches[2];
  if (b !== undefined) {
    return {
            r: r,
            g: g,
            b: b
          };
  }
  
}

exports.parse_hex = parse_hex;
exports.hex2rgb = hex2rgb;
/* No side effect */
